{"version":3,"sources":["../node_modules/jspdf/dist sync","components/MenuApp.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","MenuApp","admin","classes","useState","auth","anchorEl","setAnchorEl","open","Boolean","toggle","setToggle","renderList","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","handleClose","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Drawer","anchor","List","Table","columns","field","type","render","rowData","Link","href","link","target","rel","data","typeWork","object","beginningOfWork","completionOfWork","beginningOfTenders","completionOfTenders","costOfWork","state","setState","style","padding","editable","onRowAdd","newData","Promise","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","App","basename","path","component","exact","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c6ccd112.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 329;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nimport { Table } from \"../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst MenuApp = ({admin}) => {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = useState(true);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // HiddenPanel\r\n  const listData = [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"];\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const renderList = listData.map((text, index) => (\r\n    <ListItem button key={text}>\r\n      <ListItemIcon>\r\n        {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n      </ListItemIcon>\r\n      <ListItemText primary={text} />\r\n    </ListItem>\r\n  ));\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setToggle(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            AK BARS TENDERS\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Drawer\r\n            anchor={\"right\"}\r\n            open={toggle}\r\n            onClose={() => setToggle(false)}\r\n          >\r\n            <List>{renderList}</List>\r\n          </Drawer>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Table admin={admin}/>\r\n    </div>\r\n  );\r\n};\r\nexport { MenuApp };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Link } from \"@material-ui/core/\";\r\n\r\nconst Table = ({}) => {\r\n  const admin = true;\r\n  const columns = [\r\n    \"Вид работ\",\r\n    \"Объект\",\r\n    \"Начало работ\",\r\n    \"Окончание работ\",\r\n    \"Начало работ\",\r\n  ];\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Вид работ\", field: \"typeWork\" },\r\n      { title: \"Объект\", field: \"object\" },\r\n      { title: \"Начало работ\", field: \"beginningOfWork\", type: \"date\" },\r\n      { title: \"Окончание работ\", field: \"completionOfWork\", type: \"date\" },\r\n      { title: \"Начало тендера\", field: \"beginningOfTenders\", type: \"date\" },\r\n      {\r\n        title: \"Окончание тендера\",\r\n        field: \"completionOfTenders\",\r\n        type: \"date\",\r\n      },\r\n      { title: \"Стоимость работ\", field: \"costOfWork\", type: \"numeric\" },\r\n      {\r\n        title: \"Ссылка на документы\",\r\n        field: \"link\",\r\n        render: rowData => (\r\n          <Link href={rowData.link} target=\"_blank\" rel=\"noreferrer\">\r\n          Скачать\r\n        </Link>\r\n        ),\r\n      },\r\n    ],\r\n    data: [\r\n      {\r\n        typeWork: \"Отделочные работы\",\r\n        object: \"Солнечный город Супер ЖД 1 корп 4\",\r\n        beginningOfWork: \"20.09.2020\",\r\n        completionOfWork: \"30.09.2020\",\r\n        beginningOfTenders: \"10.10.2020\",\r\n        completionOfTenders: \"25.10.2020\",\r\n        costOfWork: 630000,\r\n        link: \"https://vk.com/kirill_1131\",\r\n      },\r\n      {\r\n        typeWork: \"Монолитные работы\",\r\n        object: \"Светлая Долина ЖД 1-15 корп 2\",\r\n        beginningOfWork: \"20.09.2020\",\r\n        completionOfWork: \"30.09.2020\",\r\n        beginningOfTenders: \"10.10.2020\",\r\n        completionOfTenders: \"25.10.2020\",\r\n        costOfWork: 990000,\r\n        link: \"https://vk.com/andreevth\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"30px 20px\",\r\n      }}\r\n    >\r\n      <MaterialTable\r\n        title=\"ТЕКУЩИЕ И ПЛАНИРУЕМЫЕ ТЕНДЕРЫ ПО СМР\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        editable={\r\n          admin\r\n            ? {\r\n                onRowAdd: (newData) =>\r\n                  new Promise((resolve) => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      setState((prevState) => {\r\n                        const data = [...prevState.data];\r\n                        data.push(newData);\r\n                        return { ...prevState, data };\r\n                      });\r\n                    }, 600);\r\n                  }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      if (oldData) {\r\n                        setState((prevState) => {\r\n                          const data = [...prevState.data];\r\n                          data[data.indexOf(oldData)] = newData;\r\n                          return { ...prevState, data };\r\n                        });\r\n                      }\r\n                    }, 600);\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      setState((prevState) => {\r\n                        const data = [...prevState.data];\r\n                        data.splice(data.indexOf(oldData), 1);\r\n                        return { ...prevState, data };\r\n                      });\r\n                    }, 600);\r\n                  }),\r\n              }\r\n            : null\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport { Table };\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { MenuApp, Table } from \"./components\";\n\nfunction App() {\n  const [admin, setAdmin] = useState(false);\n\n  return (\n    <BrowserRouter basename=\"/akbarstenders/\">\n      <Switch>\n        <Route path=\"/\" component={MenuApp} exact />\n        <Route path=\"/admin-panel\" component={Table} exact />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}