{"version":3,"sources":["../node_modules/jspdf/dist sync","components/MenuApp.js","components/Table.js","components/Header.js","components/Footer.js","pages/SignInPage.js","pages/SignUpPage.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","menuAppBar","background","padding","button","color","box","display","flexDirection","main","marginTop","marginBottom","footer","backgroundColor","palette","type","grey","paper","alignItems","avatar","margin","secondary","form","width","submit","formControl","minWidth","maxWidth","chips","flexWrap","chip","noLabel","App","useState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iGAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,wRCgBPC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAGZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAG7BC,MAAO,CACLJ,SAAU,GAEZK,WAAY,CACVC,WAAY,e,4BCjCET,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJQ,QAAS,aAEXC,OAAQ,CACNF,WAAY,UACZG,MAAO,a,OCPOZ,aAAW,SAACC,GAAD,MAAY,CACvCY,IAAK,CACHH,QAAS,iB,qBCiBKV,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJY,QAAS,OACTC,cAAe,UAGjBC,KAAM,CACJC,UAAWhB,EAAMK,QAAQ,GACzBY,aAAcjB,EAAMK,QAAQ,IAE9Ba,OAAQ,CACNT,QAAST,EAAMK,QAAQ,EAAG,GAC1BW,UAAW,OACXG,gBACyB,UAAvBnB,EAAMoB,QAAQC,KACVrB,EAAMoB,QAAQE,KAAK,KACnBtB,EAAMoB,QAAQE,KAAK,U,iDCPXvB,aAAW,SAACC,GAAD,MAAY,CACvCuB,MAAO,CACLP,UAAWhB,EAAMK,QAAQ,GACzBQ,QAAS,OACTC,cAAe,SACfU,WAAY,UAEdC,OAAQ,CACNC,OAAQ1B,EAAMK,QAAQ,GACtBc,gBAAiBnB,EAAMoB,QAAQO,UAAUZ,MAE3Ca,KAAM,CACJC,MAAO,OACPb,UAAWhB,EAAMK,QAAQ,IAE3ByB,OAAQ,CACNJ,OAAQ1B,EAAMK,QAAQ,EAAG,EAAG,Q,gDCNdN,aAAW,SAACC,GAAD,MAAY,CACvCuB,MAAO,CACLP,UAAWhB,EAAMK,QAAQ,GACzBQ,QAAS,OACTC,cAAe,SACfU,WAAY,UAEdC,OAAQ,CACNC,OAAQ1B,EAAMK,QAAQ,GACtBc,gBAAiBnB,EAAMoB,QAAQO,UAAUZ,MAE3Ca,KAAM,CACJC,MAAO,OACPb,UAAWhB,EAAMK,QAAQ,IAE3ByB,OAAQ,CACNJ,OAAQ1B,EAAMK,QAAQ,EAAG,EAAG,IAE9B0B,YAAa,CACXL,OAAQ1B,EAAMK,QAAQ,GACtB2B,SAAU,IACVC,SAAU,KAEZC,MAAO,CACLrB,QAAS,OACTsB,SAAU,QAEZC,KAAM,CACJV,OAAQ,GAEVW,QAAS,CACPrB,UAAWhB,EAAMK,QAAQ,QCpDdiC,MAhBf,WAAgB,IAAD,EACaC,oBAAS,GADtB,8BCQKC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cca35bf8.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 335;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  MenuItem,\r\n  Menu,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Container,\r\n  Button,\r\n} from \"@material-ui/core/\";\r\n\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // background: \"#ff2262\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    // background: \"#ff2262\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  menuAppBar: {\r\n    background: \"#5e00c6\",\r\n  },\r\n}));\r\n\r\nconst MenuApp = ({ admin }) => {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = useState(true);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // HiddenPanel\r\n  const listData = [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"];\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const renderList = listData.map((text, index) => (\r\n    <ListItem button key={text}>\r\n      <ListItemIcon>\r\n        {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n      </ListItemIcon>\r\n      <ListItemText primary={text} />\r\n    </ListItem>\r\n  ));\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.menuAppBar} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setToggle(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"white\",\r\n              }}\r\n              to=\"/\"\r\n            >\r\n              AK BARS TENDERS\r\n            </Link>\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircleIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"#000000DE\",\r\n                  }}\r\n                  to=\"/sign-in\"\r\n                >\r\n                  <MenuItem onClick={handleClose}>Войти</MenuItem>\r\n                </Link>\r\n\r\n                <Link\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"#000000DE\",\r\n                  }}\r\n                  to=\"/sign-up\"\r\n                >\r\n                  <MenuItem onClick={handleClose}>Регистрация</MenuItem>\r\n                </Link>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Drawer\r\n            anchor={\"right\"}\r\n            open={toggle}\r\n            onClose={() => setToggle(false)}\r\n          >\r\n            <List>{renderList}</List>\r\n          </Drawer>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nexport { MenuApp };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles, Link, Button } from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"30px 20px\",\r\n  },\r\n  button: {\r\n    background: \"#ff2262\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst Table = ({ admin }) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"№\", field: \"item\", type: \"numeric\"  },\r\n      { title: \"Вид работ\", field: \"typeWork\" },\r\n      { title: \"Объект\", field: \"object\" },\r\n      { title: \"Начало работ\", field: \"beginningOfWork\", type: \"date\" },\r\n      { title: \"Окончание работ\", field: \"completionOfWork\", type: \"date\" },\r\n      { title: \"Начало тендера\", field: \"beginningOfTenders\", type: \"date\" },\r\n      {\r\n        title: \"Окончание тендера\",\r\n        field: \"completionOfTenders\",\r\n        type: \"date\",\r\n      },\r\n      { title: \"Стоимость работ\", field: \"costOfWork\", type: \"numeric\" },\r\n      {\r\n        title: \"Ссылка на документы\",\r\n        field: \"link\",\r\n        render: (rowData) => (\r\n          <Button\r\n            // className={classes.button}\r\n\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            href={rowData.link}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Скачать\r\n          </Button>\r\n        ),\r\n      },\r\n    ],\r\n    data: [\r\n      {\r\n        item: \"1\",\r\n        typeWork: \"Отделочные работы\",\r\n        object: \"Солнечный город Супер ЖД 1 корп 4\",\r\n        beginningOfWork: \"20.09.2020\",\r\n        completionOfWork: \"30.09.2020\",\r\n        beginningOfTenders: \"10.10.2020\",\r\n        completionOfTenders: \"25.10.2020\",\r\n        costOfWork: 630000,\r\n        link: \"https://vk.com/kirill_1131\",\r\n      },\r\n      {\r\n        item: \"2\",\r\n        typeWork: \"Монолитные работы\",\r\n        object: \"Светлая Долина ЖД 1-15 корп 2\",\r\n        beginningOfWork: \"20.09.2020\",\r\n        completionOfWork: \"30.09.2020\",\r\n        beginningOfTenders: \"10.10.2020\",\r\n        completionOfTenders: \"25.10.2020\",\r\n        costOfWork: 990000,\r\n        link: \"https://vk.com/andreevth\",\r\n      },\r\n    ],\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Поиск\",\r\n        searchPlaceholder: \"Поиск\",\r\n        nRowsSelected: \"{0} элементов(s)\",\r\n      },\r\n      pagination: {\r\n        labelDisplayedRows: \"{from}-{to} до {count}\",\r\n        labelRowsSelect: \"элементов\",\r\n        labelRowsPerPage: \"элементов на странице:\",\r\n        firstAriaLabel: \"Первая страница\",\r\n        firstTooltip: \"Первая страница\",\r\n        previousAriaLabel: \"Предыдущая страница\",\r\n        previousTooltip: \"Предыдущая страница\",\r\n        nextAriaLabel: \"Следующая страница\",\r\n        nextTooltip: \"Следующая страница\",\r\n        lastAriaLabel: \"Предыдущая страница\",\r\n        lastTooltip: \"Последняя страница\",\r\n      },\r\n    },\r\n    options: {\r\n      pageSizeOptions: [5,10,15,20,25,30]\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        title=\"\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        localization={state.localization}\r\n        options={state.options}\r\n        editable={\r\n          admin      \r\n            ? {\r\n                onRowAdd: (newData) =>\r\n                  new Promise((resolve) => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      setState((prevState) => {\r\n                        const data = [...prevState.data];\r\n                        data.push(newData);\r\n                        return { ...prevState, data };\r\n                      });\r\n                    }, 600);\r\n                  }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      if (oldData) {\r\n                        setState((prevState) => {\r\n                          const data = [...prevState.data];\r\n                          data[data.indexOf(oldData)] = newData;\r\n                          return { ...prevState, data };\r\n                        });\r\n                      }\r\n                    }, 600);\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      setState((prevState) => {\r\n                        const data = [...prevState.data];\r\n                        data.splice(data.indexOf(oldData), 1);\r\n                        return { ...prevState, data };\r\n                      });\r\n                    }, 600);\r\n                  }),\r\n              }\r\n            : null\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport { Table };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, Box, Container } from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    padding: \"10px 20px\",\r\n  },\r\n}));\r\n\r\nconst Header = ({ admin }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      className={classes.box}\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <h3>\r\n        Если вы планируете участвовать в будущих тендерах, просим вас выслать\r\n        карточку компании, а так же указать вид работ, осуществляемой вашей\r\n        организацией, на электронный адрес: FZakirov@abdev.ru . Вы получите\r\n        приглашение на участие при наступлении срока проведения тендера по\r\n        вашему виду работ.\r\n      </h3>\r\n    </Box>\r\n  );\r\n};\r\nexport { Header };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  CssBaseline,\r\n  Typography,\r\n  Container,\r\n  Link,\r\n} from \"@material-ui/core/\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // minHeight: \"100vh\",\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: \"auto\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[200]\r\n        : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nconst Footer = ({}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"body1\">\r\n            My sticky footer can be found here.\r\n          </Typography>\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\nexport { Footer };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid,\r\n  Box,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { MenuApp } from \"../components\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignInPage = ({ admin }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <MenuApp />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Войти\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Адрес эл. почты\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Запомнить меня\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Войти\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"black\",\r\n                  }}\r\n                  to=\"/\"\r\n                  variant=\"body2\"\r\n                >\r\n                  Забыли пароль?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"black\",\r\n                  }}\r\n                  to=\"/sign-up\"\r\n                  variant=\"body2\"\r\n                >\r\n                  {\"Нет учетной записи? Зарегистрироваться\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport { SignInPage };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Checkbox,\r\n  Grid,\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  ListItemText,\r\n  Chip,\r\n} from \"@material-ui/core/\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { MenuApp } from \"../components\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst names = [\r\n  \"Геодезические работы\",\r\n  \"Земляные работы\",\r\n  \"Устройство скважин\",\r\n  \"Свайные работы\",\r\n  \"Монолитные работы\",\r\n  \"Кирпичная кладка\",\r\n  \"Монтаж металлических конструкций\",\r\n  \"Отделочные работы\",\r\n  \"Кровельные работы\",\r\n  \"Фасадные работы\",\r\n  \"Устройство внутренних инженерных систем и оборудования\",\r\n  \"Устройство наружных сетей водопровода\",\r\n  \"Устройство наружных сетей канализации\",\r\n  \"Устройство наружных сетей теплоснабжения\",\r\n  \"Устройство наружных сетей газоснабжения\",\r\n  \"Устройство наружных электрических сетей\",\r\n  \"Монтаж лифтов\",\r\n  \"Пусконаладочные работы\",\r\n];\r\n\r\nconst SignUpPage = ({}) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setPersonName(event.target.value);\r\n  };\r\n\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MenuApp />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Регистрация\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"Имя\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Фамилия\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Адрес эл. почты\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Пароль\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"confirmPassword\"\r\n                  label=\"Повторите пароль\"\r\n                  type=\"password\"\r\n                  id=\"confirmPassword\"\r\n                  autoComplete=\"confirmPassword\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"companyName\"\r\n                  label=\"Название компании\"\r\n                  name=\"companyName\"\r\n                  autoComplete=\"companyName\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"companyINN\"\r\n                  label=\"ИНН компании\"\r\n                  name=\"companyINN\"\r\n                  autoComplete=\"companyINN\"\r\n                />\r\n              </Grid>\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  row\r\n                  aria-label=\"position\"\r\n                  name=\"position\"\r\n                  defaultValue=\"top\"\r\n                  style={{\r\n                    width: \"250px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"entity\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Юр.Лицо\"\r\n                    labelPlacement=\"entity\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"individualEntrepreneur\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"ИП\"\r\n                    labelPlacement=\"individualEntrepreneur\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <Grid item xs={12}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel id=\"demo-mutiple-checkbox-label\">\r\n                    Выполняемые виды работ\r\n                  </InputLabel>\r\n                  <Select\r\n                    style={{ width: \"270px\" }}\r\n                    labelId=\"demo-mutiple-checkbox-label\"\r\n                    id=\"demo-mutiple-checkbox\"\r\n                    multiple\r\n                    value={personName}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                    renderValue={(selected) => selected.join(\", \")}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {names.map((name) => (\r\n                      <MenuItem key={name} value={name}>\r\n                        <Checkbox checked={personName.indexOf(name) > -1} />\r\n                        <ListItemText primary={name} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"Я хочу получать предложения по выбранным видам работ\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Регистрация\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"black\",\r\n                  }}\r\n                  to=\"/sign-in\"\r\n                  variant=\"body2\"\r\n                >\r\n                  Уже есть аккаунт? Войти\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport { SignUpPage };\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { HomePage, SignInPage, SignUpPage } from \"./pages\";\n\nfunction App() {\n  const [admin, setAdmin] = useState(true);\n\n  return (\n    // <BrowserRouter basename=\"/akbarstenders/\">\n    <BrowserRouter basename=\"/\">\n      <Switch>\n        <Route path=\"/\" component={() => <HomePage admin={admin} />} exact />\n        <Route path=\"/sign-in\" component={SignInPage} exact />\n        <Route path=\"/sign-up\" component={SignUpPage} exact />\n        {/* <Route path=\"/profile\" component={ProfilePage} exact /> */}\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}